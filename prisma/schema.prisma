generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider             = "mysql"
  url                  = env("DATABASE_URL")
  referentialIntegrity = "prisma"
}

model Account {
  id                String  @id @default(uuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(uuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(uuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model LocationCoordinates {
  id        String @id @default(uuid())
  latitude  String
  longitude String
  Farm      Farm[]
}

model PvPanel {
  id        String @id @default(uuid())
  peakPower Int
  loss      Int
  Farm      Farm[]
}

model Farm {
  id                    Int                 @id @default(autoincrement())
  farmName              String              @unique
  location              LocationCoordinates @relation(fields: [locationCoordinatesId], references: [id])
  locationCoordinatesId String
  pvPanel               PvPanel             @relation(fields: [pvPanelId], references: [id])
  pvPanelId             String
  created               DateTime            @default(now())
}
